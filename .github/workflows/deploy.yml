name: Deploy to DO
on:
  push:
    branches: [master]
jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./FRONTEND/polls_test_ui/
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Node and Cache
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: FRONTEND/polls_test_ui/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Lint Check
        run: npm run lint
      - name: Create Artifact
        run: npm run build
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./FRONTEND/polls_test_ui/dist
  deploy-staging:
    name: Deploy to Staging
    runs-on: self-hosted
    needs: build
    environment: staging
    # required to interact with GitHub's OIDC Token endpoint
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: /tmp/dist
      - name: Deploy Artifact
        run: |
          sudo apt-get update -y
          sudo apt-get upgrade -y
          
  # deploy-production:
  #   name: Deploy to Production
  #   runs-on: ubuntu-latest
  #   needs: [build, staging] # build - if you want to deploy in parallel with Staging
  #   environment: production
  #   # required to interact with GitHub's OIDC Token endpoint
  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:
  #     - name: Download Artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: cdk-out
  #         path: cdk.out
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1-node16
  #       with:
  #         role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
  #         aws-region: eu-central-1
  #     - name: Deploy Artifact
  #       run: npx cdk deploy --app "./cdk.out/assembly-Prod" --all --concurrency 10 --method=direct --require-approval never
